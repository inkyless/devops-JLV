name: Lint Code Base

on: 
  push:
    branches:
    - main
  pull_request:
    branches : 
    - main

jobs:
  build:
    name: Lint Code Base
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v7.0.0 # x-release-please-version
        env:
          DEFAULT_BRANCH : main
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_HTML : true
          VALIDATE_JAVASCRIPT_ES	: true
          VALIDATE_PYTHON : true
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Short Git SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      

      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/jlv-project:${{ env.sha }}

  deploy:
      name: Deploy Kubernetes
      runs-on: ubuntu-latest
                      
      permissions:
        contents: read
        packages: read
        # To report GitHub Actions status checks
        statuses: write

      steps:
          - name: Set up kubectl
            uses: azure/setup-kubectl@v1
            with:
              version: 'latest'

          - name: Set up kubeconfig
            run: |
              mkdir -p $HOME/.kube
              echo "
              apiVersion: v1
              clusters:
              - cluster:
                  certificate-authority-data: ${{ secrets.MINIKUBE_CA_CERT }}
                  server: https://127.0.0.1:49676
                name: minikube
              contexts:
              - context:
                  cluster: minikube
                  user: minikube
                name: minikube
              current-context: minikube
              kind: Config
              preferences: {}
              users:
              - name: minikube
                user:
                  client-certificate-data: ${{ secrets.MINIKUBE_CLIENT_CERT }}
                  client-key-data: ${{ secrets.MINIKUBE_CLIENT_KEY }}
              " > $HOME/.kube/config

          - name: Verify Kubernetes config
            run: |
              kubectl config view

          - name : Deploy
            run : |
              kubectl apply -f deployment.yaml
              kubectl apply -f service.yaml

